options {
    STATIC = false;
    LOOKAHEAD = 1;
    DEBUG_LOOKAHEAD = true;
}

PARSER_BEGIN(Language20221)

public class Language20221{
    
}

PARSER_END(Language20221)

SKIP :  //caracteres que o javacc excluirá da linguagem
{
        " "
    |   "\t"
    |   "\n"
    |   "\r"
    |   "\f"
    |   "\r\n"
}

//COMENTÁRIO DE MULTIPLAS LINHAS
SKIP:
{
    "/*" : comentariodemultiplaslinhas
}
<comentariodemultiplaslinhas> SKIP:
{
        "*/" : DEFAULT
    |   <~[]>
}

//COMENTÁRIO DE LINHA
SKIP:
{
    "//": comentariodelinha
}
<comentariodelinha> SKIP:
{
        <["\n" , "\r"]> : DEFAULT
    |   <~[]>
}


//palavras reservadas
TOKEN :
{
        < DO: "do" >
    |   < THIS: "this" >
    |   < BODY: "body" >
    |   < DESCRIPTION: "description" >
    |   < DECLARATION: "declaration" >
    |   < TYPE: "type" >
    |   < IS: "is" >
    |   < CONSTANT: "constant" >
    |   < AND: "and" >
    |   < VARIABLE: "variable" >
    |   < AS: "as" >
    |   < INTEGER: "integer" >
    |   < REAL: "real" >
    |   < STRING: "string" >
    |   < LOGIC: "logic" >
    |   < DESIGNATE: "designate" >
    |   < READ: "read" >
    |   < WRITE: "write" >
    |   < ALL: "all" >
    |   < REPEAT: "repeat" >
    |   < TRUE: "true" >
    |   < UNTRUE: "untrue" >
}

//Tokens Auxiliares
TOKEN : {
        < LETRA: ["a"-"z","A"-"Z"] >
    |   < ASCII : ~[] >      //any character
    |   < DIGITO: ["0"-"9"] >
    |   < UNDERLINE: "_" >
    |   < ASPAS : "\"">
    |   < APOSTROFO : "'" >
}

//Identificadores
TOKEN : {
    < IDENTIFICADORES: "a" >
}

//Constantes Literais
TOKEN : {
    < CONSTANTE_LITERAL : <ASPAS> (<ASCII>)* <ASPAS> | <APOSTROFO> (<ASCII>)* <APOSTROFO>  >
}

//Constantes Númericas (Real e Inteira)
TOKEN : {
        < CONSTANTE_NUMERICA_INTEIRA: <DIGITO> (<DIGITO>)? (<DIGITO>)? >                  // 1 a 3 digitos
    |   < CONSTANTE_NUMERICA_REAL_CASAS_DECIMAIS: <DIGITO> (<DIGITO>)? (<DIGITO>)? >      // 1 A 3 digitos
    |   < CONSTANTE_NUMERICA_REAL:   <CONSTANTE_NUMERICA_INTEIRA> (<DIGITO>)? (<DIGITO>)? <PONTO_FINAL> <CONSTANTE_NUMERICA_REAL_CASAS_DECIMAIS> >
}


//Símbolos Especiais
TOKEN :
{
        < COMENTARIO_FACULTATIVO: ":-">         ///VERRRRRRRRRRRRRRRRRRRRR
    |   < ABRE_CHAVES: "{" >
    |   < FECHA_CHAVES: "}" >
    |   < PONTO_FINAL: "." >
    |   < VIRGULA: "," >
    |   < ABRE_COLCHETES: "[" >
    |   < FECHA_COLCHETES: "]" >
    |   < ABRE_PARENTESES: "(" >
    |   < FECHA_PARENTESES: ")" >
}

//Operadores Aritméticos
TOKEN :
{
        < ADICAO: "+" >
    |   < SUBTRACAO: "-" >
    |   < MULTIPLICACAO: "*" >
    |   < DIVISAO: "/" >
    |   < POTENCIACAO: "**" >
    |   < DIVISAO_INTEIRA: "%" >
    |   < RESTO_DIVISAO_INTEIRA: "%%" >
}

//Operadores Relacionais
TOKEN :
{
        < IGUAL: "=" >
    |   < DIFERENTE: "!=" >
    |   < MENOR: "<" >
    |   < MAIOR: ">" >
    |   < MENOR_IGUAL: "<=" >
    |   < MAIOR_IGUAL: ">=" >
}

//Operadores Lógicos
TOKEN :
{
        < E: "&" >
    |   < OU: "|" >
    |   < NAO: "!" >
}

